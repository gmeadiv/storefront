{"ast":null,"code":"let initialState = {\n  categories: [{\n    name: 'Food',\n    products: 0\n  }, {\n    name: 'Alcohol',\n    products: 0\n  }, {\n    name: 'Misc',\n    products: 0\n  }]\n};\n\nfunction candidateReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case 'ADD_VOTE':\n      let newCandidates = state.categories.map(person => {\n        if (person.name === payload) {\n          return { ...person,\n            products: person.products + 1\n          };\n        } else {\n          return person;\n        }\n      });\n      return {\n        categories: newCandidates\n      };\n\n    case 'RESET_VOTES':\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nexport default candidateReducer;","map":{"version":3,"sources":["/Users/meadg/projects/courses/code_401/storefront/storefront/src/components/categories.js"],"names":["initialState","categories","name","products","candidateReducer","state","action","type","payload","newCandidates","map","person"],"mappings":"AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CACV;AAACC,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GADU,EAEV;AAACD,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFU,EAGV;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAHU;AADK,CAAnB;;AAQA,SAASC,gBAAT,GAAwD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;AACtD,MAAI;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,MAAtB;;AAEA,UAAOC,IAAP;AAEE,SAAK,UAAL;AACE,UAAIE,aAAa,GAAGJ,KAAK,CAACJ,UAAN,CAAiBS,GAAjB,CAAqBC,MAAM,IAAI;AAEjD,YAAIA,MAAM,CAACT,IAAP,KAAgBM,OAApB,EAA6B;AAC3B,iBAAO,EAAC,GAAGG,MAAJ;AAAYR,YAAAA,QAAQ,EAAEQ,MAAM,CAACR,QAAP,GAAkB;AAAxC,WAAP;AACD,SAFD,MAEO;AAAC,iBAAOQ,MAAP;AAAc;AAEvB,OANmB,CAApB;AAOA,aAAM;AAACV,QAAAA,UAAU,EAAEQ;AAAb,OAAN;;AAEF,SAAK,aAAL;AACE,aAAOT,YAAP;;AAEA;AACA,aAAOK,KAAP;AAhBJ;AAkBD;;AAED,eAAeD,gBAAf","sourcesContent":["let initialState = {\n  categories: [\n    {name: 'Food', products: 0},\n    {name: 'Alcohol', products: 0},\n    {name: 'Misc', products: 0}\n  ],\n}\n\nfunction candidateReducer(state = initialState, action) {\n  let {type, payload} = action;\n\n  switch(type) {\n    \n    case 'ADD_VOTE':\n      let newCandidates = state.categories.map(person => {\n\n        if (person.name === payload) {\n          return {...person, products: person.products + 1}\n        } else {return person}\n\n      })\n      return{categories: newCandidates}\n\n    case 'RESET_VOTES':\n      return initialState\n    \n      default:\n      return state\n  }\n}\n\nexport default candidateReducer;"]},"metadata":{},"sourceType":"module"}